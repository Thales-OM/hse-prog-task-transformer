services:
  postgres:
    container_name: postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    # command: -c idle_session_timeout=60000 # Set 1 min timeout on idle connection 
    env_file:
      - private.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p 5432 -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - private.env
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped  # Ensure the server restarts on crash
    env_file:
      - public.env
      - private.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERVER_PORT: 80
      SERVER_HOST: server
    volumes:
      - ./server/templates:/app/templates
      - ./server/static:/app/static
    expose:
      - "80"
    depends_on:
      - postgres
      - redis

  nginx:
      image: nginx:latest
      container_name: nginx
      ports:
        - "80:80"   # HTTP
        # - "443:443" # HTTPS
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Nginx configuration
        # - ./certs:/etc/nginx/certs             # SSL certificates (if using HTTPS)
      depends_on:
        - server

volumes:
  postgres_data:
